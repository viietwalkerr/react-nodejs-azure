{"version":3,"sources":["helpers/AuthContext.js","helpers/const.js","components/SidebarData.js","components/Navbar.jsx","pages/Home.js","pages/CreatePost.js","pages/Post.js","pages/Login.js","pages/Logout.js","pages/Register.js","pages/Success.js","uploads/profiledefault.jpg","assets/profiledefaultuser.jpg","pages/Profile.js","pages/About.js","pages/Settings.js","pages/ChangePassword.js","pages/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","baseUrl","SidebarData","title","path","icon","cName","Navbar","useState","sidebar","setSidebar","authState","useContext","setAuthState","showSidebar","useEffect","Cookies","get","status","className","to","onClick","activeClassName","username","axios","then","response","remove","document","cookie","console","log","map","item","index","Home","listOfPosts","setListOfPosts","likedPosts","setLikedPosts","history","useHistory","defaults","withCredentials","headers","accessToken","data","like","PostId","likePost","postId","post","id","liked","Likes","likesArray","pop","includes","filter","value","key","push","postText","length","CreatePost","validationSchema","Yup","shape","required","initialValues","onSubmit","name","component","autoComplete","placeholder","type","Post","useParams","postObject","setPostObject","comments","setComments","newComment","setNewComment","userId","editPost","option","newTitle","prompt","put","newPostText","newText","delete","deletePost","onChange","event","target","commentBody","error","alert","commentToAdd","comment","val","deleteComment","Login","setLoginStatus","password","crossDomain","set","user","netlify","Logout","Register","firstname","lastname","email","min","max","Success","openCity","e","cityName","i","tabcontent","tablinks","getElementsByClassName","style","display","replace","getElementById","currentTarget","Profile","setUsername","setFirstname","setLastname","setEmail","catch","err","src","profiledefault","alt","About","Settings","href","ChangePassword","oldPassword","setOldPassword","newPassword","setNewPassword","localStorage","getItem","NotFound","topFunction","body","scrollTop","documentElement","App","window","onscroll","Provider","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1c713cea.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext(\"\");","export const baseUrl = process.env.NODE_ENV === 'development' ? 'http://localhost:3001/' : 'https://react-nodejs-illumin8.herokuapp.com/';","import React from 'react'\r\n// import * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\n// import * as IoIcons from 'react-icons/io';\r\n\r\nexport const SidebarData = [\r\n    {\r\n        title: 'Home',\r\n        path: '/Home',\r\n        icon: <AiIcons.AiFillHome />,\r\n        cName: 'nav-text',\r\n    },\r\n    {\r\n        title: 'About',\r\n        path: '/About',\r\n        icon: <AiIcons.AiFillInfoCircle />,\r\n        cName: 'nav-text',\r\n    },\r\n    {\r\n        title: 'Settings',\r\n        path: '/Settings',\r\n        icon: <AiIcons.AiFillSetting />,\r\n        cName: 'nav-text',\r\n    },\r\n    {\r\n        title: 'Profile',\r\n        path: '/Profile',\r\n        icon: <AiIcons.AiFillProfile />,\r\n        cName: 'nav-text',\r\n    },\r\n    {\r\n        title: 'What is this?',\r\n        path: '/404NotFound',\r\n        icon: <AiIcons.AiOutlineQuestion />,\r\n        cName: 'nav-text',\r\n    },\r\n]","import React, {useEffect, useState, useContext } from 'react';\r\n// import { Nav, Form, FormControl, NavDropdown, Badge } from 'react-bootstrap';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport { BrowserRouter as Link, NavLink } from 'react-router-dom';\r\nimport { SidebarData} from './SidebarData';\r\nimport './Navbar.css';\r\n// import { IconContext } from 'react-icons';\r\nimport { AuthContext } from '../helpers/AuthContext';\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../helpers/const';\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\n\r\nfunction Navbar() {\r\n    const [sidebar, setSidebar] = useState(false);\r\n    const { authState } = useContext(AuthContext); \r\n    const { setAuthState} = useContext(AuthContext);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // axios.get(\r\n        //     baseUrl + \"auth/token\",\r\n        //     // 'http://localhost:3001/auth/token', \r\n        //     {\r\n        //         headers: { accessToken: localStorage.getItem(\"accessToken\")\r\n        //     }\r\n        // }, [])\r\n        // .then((response) => {\r\n        //     if (response.data.error) {\r\n        //         // setAuthState({...authState, status: false});\r\n        //     } else {\r\n        //         setAuthState({\r\n        //             username: response.data.username,\r\n        //             id: response.data.id,\r\n        //             status: true,\r\n        //         });\r\n        //     }\r\n        // })\r\n        if (!Cookies.get(\"access-token\")){\r\n            setAuthState({...authState, status: false});\r\n        } else {\r\n            setAuthState({...authState, status: true});\r\n        }\r\n    }, []);\r\n\r\n    function logout() {\r\n\r\n        axios.get(baseUrl + \"auth/logout\").then((response) => {\r\n            Cookies.remove(\"access-token\");\r\n            document.cookie = \"access-token=; expires=Thu, 01 Jan 1970 00:00:00 UTC\";\r\n            console.log(response);\r\n            setAuthState({...authState, status: false});\r\n        })\r\n\r\n        // localStorage.removeItem(\"accessToken\");\r\n        // setAuthState({...authState, status: false});\r\n        \r\n        // authState(\r\n        //     {\r\n        //         username: \"\",\r\n        //         id: 0,\r\n        //         status: false,\r\n        //     });\r\n    }\r\n\r\n    function showSidebar() {\r\n        setSidebar(!sidebar)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* change color, add styles */}\r\n            <div className=\"navbar\">\r\n                <Link to=\"#\" className='menu-bars'>\r\n                    <FaIcons.FaBars className=\"menu-bars\" onClick={showSidebar} />\r\n                </Link>\r\n                <div className='topnav-items'>\r\n                    {!authState.status ? (\r\n                        <>\r\n                            <NavLink activeClassName=\"topNavActive\" to=\"/\">Home</NavLink>\r\n                            <NavLink activeClassName=\"topNavActive\" to=\"/about\">About</NavLink>\r\n                        </>\r\n                    ): (\r\n                        <>\r\n                            <NavLink activeClassName=\"topNavActive\" to=\"/\">Home</NavLink>\r\n                            <NavLink activeClassName=\"topNavActive\" to=\"/about\">About</NavLink>\r\n                            \r\n                            <NavLink activeClassName=\"topNavActive\" to=\"/createpost\">Create Post</NavLink>\r\n                        </>\r\n                    )}\r\n                    \r\n                    {/* <Form className=\"form-center\">\r\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"\"></FormControl>\r\n                    </Form> */}\r\n                    \r\n                </div>\r\n                <div className=\"topnav-profile\">\r\n                {!authState.status ? (\r\n                    <>\r\n                    \r\n                        \r\n                        <NavLink activeClassName=\"topNavActive\" to=\"/login\">Login</NavLink>\r\n                        <NavLink activeClassName=\"topNavActive\" to=\"/register\">Register</NavLink>\r\n                    </>\r\n                    ) : (\r\n                    <>\r\n                        <NavLink activeClassName=\"topNavActive\" to={`/profile/${authState.username}`}>{authState.username}</NavLink>\r\n                        \r\n                        <NavLink activeClassName=\"topNavActive\" to=\"/settings\">Settings</NavLink>\r\n                        <NavLink activeClassName=\"topNavActive\" to=\"/logout\" onClick={logout}>Logout</NavLink>\r\n                    </>\r\n                    )}\r\n                    \r\n                    \r\n                </div>\r\n                \r\n                </div>\r\n                {/* <SideNav sidebar={this.state.sidebar}/> */}\r\n                {/* Start of Sidebar */}\r\n                <nav className={sidebar ? 'sidenav active' : 'sidenav'}>\r\n                <ul className='sidenav-items' onClick={showSidebar}>\r\n                    <li className=\"sidenav-toggle\">\r\n                    <Link to=\"#\" className='menu-bars'>\r\n                        <AiIcons.AiOutlineClose className=\"menu-cross\"/>\r\n                    </Link>\r\n                    </li>\r\n                    {SidebarData.map((item, index) => {\r\n                    return (\r\n                        <li key={index} className={item.cName}>\r\n                        <NavLink activeClassName=\"sideNavActive\" to={item.path} >\r\n                            {item.icon}\r\n                            <span>{item.title}</span>\r\n                        </NavLink>\r\n                        </li>\r\n                    )\r\n                    })}\r\n                </ul>\r\n                </nav>\r\n            \r\n        </>\r\n    )\r\n}\r\n    \r\n\r\n\r\n// class SideNav extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       activePath: props.pathname,\r\n//       sidebar: props.sidebar\r\n//       // setSidebar: false\r\n//     }\r\n\r\n//   }\r\n//   showSidebar() {\r\n//     // setSidebar(!sidebar)\r\n//     if (this.sidebar === false) {\r\n//       this.props.setState({\r\n//         sidebar: true\r\n//       });\r\n//     } else {\r\n//       this.props.setState({\r\n//         sidebar: false\r\n//       });\r\n//     }\r\n//   }\r\n\r\n//   // showSidebar() {\r\n//   //   this.setState(state => ({\r\n//   //      sidebar: !state.sidebar\r\n//   //   }));\r\n//   // }\r\n\r\n//   render () {\r\n//     // const { activePath} = this.state;\r\n//     // const [sidebar, setSidebar] = useState(false)\r\n//     // const showSidebar = () => setSidebar(!sidebar)\r\n//     return (\r\n//       <nav className={this.props.sidebar ? 'nav-menu active' : 'nav-menu'}>\r\n//           <ul className='nav-menu-items' onClick={this.showSidebar}>\r\n//             <li className=\"navbar-toggle\">\r\n//               <Link to=\"#\" className='menu-bars'>\r\n//                 <AiIcons.AiOutlineClose />\r\n//               </Link>\r\n//             </li>\r\n//             {SidebarData.map((item, index) => {\r\n//               return (\r\n//                 <li key={index} className={item.cName}>\r\n//                   <Link to={item.path} active={item.path === this.activePath}>\r\n//                     {item.icon}\r\n//                     <span>{item.title}</span>\r\n//                   </Link>\r\n//                 </li>\r\n//               )\r\n//             })}\r\n//           </ul>\r\n//         </nav>\r\n//     )\r\n//   }\r\n// }\r\n// function Navbar() {\r\n//   const [sidebar, setSidebar] = useState(false)\r\n\r\n//   const showSidebar = () => setSidebar(!sidebar)\r\n//   return (\r\n//     <>\r\n//     <IconContext.Provider value={{color: 'red'}}>\r\n//       <div className=\"navbar\">\r\n//         <Link to=\"#\" className='menu-bars'>\r\n//           <FaIcons.FaBars onClick={showSidebar} />\r\n//         </Link>\r\n//         <div className='topnav-items'>\r\n//           <Link to=\"/\">Home</Link>\r\n//           <Link to=\"/About\">About</Link>\r\n//           <Link to=\"/Settings\">Settings</Link>\r\n//           <Form className=\"form-center\">\r\n//           <FormControl type=\"text\" placeholder=\"Search\" className=\"\"></FormControl>\r\n//           </Form>\r\n          \r\n//         </div>\r\n//         <div className=\"topnav-profile\">\r\n//           <Link to=\"/Profile\">Profile</Link>\r\n//           <Link to=\"/Profile\">Login</Link>\r\n//           <Link to=\"/Profile\">Register</Link>\r\n//         </div>\r\n        \r\n//       </div>\r\n//       <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\r\n//         <ul className='nav-menu-items' onClick={showSidebar}>\r\n//           <li className=\"navbar-toggle\">\r\n//             <Link to=\"#\" className='menu-bars'>\r\n//               <AiIcons.AiOutlineClose />\r\n//             </Link>\r\n//           </li>\r\n//           {SidebarData.map((item, index) => {\r\n//             return (\r\n//               <li key={index} className={item.cName}>\r\n//                 <Link to={item.path}>\r\n//                   {item.icon}\r\n//                   <span>{item.title}</span>\r\n//                 </Link>\r\n//               </li>\r\n//             )\r\n//           })}\r\n//         </ul>\r\n//       </nav>\r\n//       </IconContext.Provider>\r\n//     </>\r\n    \r\n//   )\r\n// }\r\n    \r\n\r\nexport default Navbar\r\n","import React/*, { useContext }*/ from 'react';\r\nimport axios from 'axios';\r\nimport { useEffect, useState, useContext } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport { baseUrl } from '../helpers/const';\r\nimport { AuthContext } from '../helpers/AuthContext';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\nfunction Home() {\r\n\r\n    const [listOfPosts, setListOfPosts] = useState([]);\r\n    const [likedPosts, setLikedPosts] = useState([]);\r\n    const { authState } = useContext(AuthContext);\r\n    let history = useHistory();\r\n\r\n    axios.defaults.withCredentials = true;\r\n\r\n    useEffect(() => {\r\n        //redirect \r\n        // if (!localStorage.getItem(\"accessToken\")) {\r\n        //     history.push(\"/login\");\r\n        if (authState.status === false) {\r\n            // history.push(\"/\");            \r\n        } else {\r\n            axios.get(baseUrl + \"posts\", \r\n                { \r\n                //     headers: { accessToken: localStorage.getItem(\"accessToken\")}\r\n                    headers: { accessToken: Cookies.get(\"access-token\") }\r\n                }\r\n                // { headers: {userId: authState.id, username: authState.username}}\r\n            ).then((response) => {\r\n                // contains 2 arrays, listsOfPosts and likedPosts\r\n                setListOfPosts(response.data.listOfPosts);\r\n                setLikedPosts(response.data.likedPosts.map((like) => {\r\n                    return like.PostId;\r\n                }));\r\n            });\r\n        }\r\n    }, [history]);\r\n    \r\n    const likePost = (postId) => {\r\n        axios.post(\r\n            baseUrl + \"likes\", \r\n            { PostId: postId }, \r\n            { headers: { accessToken: Cookies.get(\"access-token\")}}\r\n        ).then((response) => {\r\n            // Grab list, modify it, then set state to modified list (update)\r\n            setListOfPosts(\r\n                listOfPosts.map((post) => {\r\n                    // specific post\r\n                    if (post.id === postId) {\r\n                        if (response.data.liked) {\r\n                            // ...post (keep everything in the post the same, but at the end, add item)\r\n                            return {...post, Likes: [...post.Likes, 0] };\r\n                        } else {\r\n                            const likesArray = post.Likes;\r\n                            // pop removes last element\r\n                            likesArray.pop();\r\n                            // return modified item (array with 1 less item)\r\n                            return {...post, Likes:  likesArray};\r\n                        }\r\n                    } else {\r\n                        return post;\r\n                    }\r\n                })\r\n            );\r\n\r\n            if (likedPosts.includes(postId)) {\r\n                setLikedPosts(\r\n                    likedPosts.filter((id) => {\r\n                        return id !== postId;\r\n                    })\r\n                )\r\n            } else {\r\n                setLikedPosts([...likedPosts, postId]);\r\n            }\r\n        });\r\n    }\r\n    return (\r\n            <div className=\"background\">\r\n                <main className=\"posts\">\r\n                    <h2>Posts Feed</h2>\r\n                    {listOfPosts.map((value, key) => { \r\n                        return (\r\n                        <div key={key} className=\"post\">\r\n                            <div className=\"title\"> \r\n                                {value.title} \r\n                            </div> \r\n                            <div className=\"body\" onClick={() => {history.push(`/post/${value.id}`)}}> \r\n                                {value.postText} \r\n                            </div> \r\n                            <div className=\"footer\"> \r\n                                <div className=\"username\">\r\n                                    <Link to={`/profile/${value.username}`}>\r\n                                        {value.username} \r\n                                    </Link>\r\n                                </div>\r\n                                \r\n                                \r\n                                {!likedPosts.includes(value.id) ? (\r\n                                    <div className=\"likeButtons\">\r\n                                        <AiIcons.AiOutlineLike className=\"likeIcon\" onClick={() => {likePost(value.id)}}/>\r\n                                    </div>\r\n                                ) : (\r\n                                    <div className=\"likeButtons\">\r\n                                        <AiIcons.AiFillLike className=\"likeIcon\" onClick={() => {likePost(value.id)}}/>\r\n                                    </div>\r\n                                )}\r\n                                \r\n                                <label> {value.Likes.length} </label>\r\n                            </div> \r\n                        </div>\r\n                        );\r\n                    })}\r\n                </main>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React, { useEffect } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { baseUrl } from '../helpers/const';\r\nimport axios from 'axios';\r\nimport * as Yup from 'yup';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\nfunction CreatePost() {\r\n\r\n    let history = useHistory();\r\n    const initialValues = {\r\n        title: \"\",\r\n        postText: \"\",\r\n    };\r\n\r\n    // Validate input\r\n    // Requires login\r\n    useEffect(() => {\r\n        // if (!localStorage.getItem(\"accessToken\")) {\r\n        //     history.push(\"/login\");\r\n        // }\r\n        if (!Cookies.get()) {\r\n            history.push(\"/\");\r\n        }\r\n    }, [history]); //need to put array or useEffect will continue infinitely\r\n    const validationSchema = Yup.object().shape({\r\n        title: Yup.string().required(\"You must input a Title!\"),\r\n        postText: Yup.string().required(\"You must input text for Post!\"),\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        // Use headers to pass username\r\n        axios.post(\r\n            baseUrl + \"posts\", data, \r\n            {\r\n                // headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n                headers: { accessToken: Cookies.get(\"access-token\") },\r\n            }\r\n        ).then((response) => {\r\n            history.push(\"/\");\r\n        }, [history]);\r\n    };\r\n\r\n    return (\r\n        <div className=\"background\">\r\n            <main>\r\n                \r\n                {/* <div className=\"createPostPage\">\r\n                    <Formik \r\n                        initialValues={initialValues} \r\n                        onSubmit={onSubmit} \r\n                        validationSchema={validationSchema}\r\n                    >\r\n                        <Form className=\"formContainer\">\r\n                        <h2> Create Post </h2>\r\n                            <label>Title: </label>\r\n                            <ErrorMessage name=\"title\" component=\"span\" />\r\n                            <Field \r\n                                autocomplete=\"off\"\r\n                                id=\"inputCreatePost\" \r\n                                name=\"title\" \r\n                                placeholder=\"(Ex. Title)\"\r\n                            />\r\n                            <label>Post: </label>\r\n                            <ErrorMessage name=\"postText\" component=\"span\" />\r\n                            <Field \r\n                                autocomplete=\"off\"\r\n                                id=\"inputCreatePost\" \r\n                                name=\"postText\" \r\n                                placeholder=\"(Ex. Post)\"\r\n                            />\r\n                            <label>Username: </label>\r\n                            <ErrorMessage name=\"username\" component=\"span\" />\r\n                            <Field \r\n                                autocomplete=\"off\"\r\n                                id=\"inputCreatePost\" \r\n                                name=\"username\" \r\n                                placeholder=\"(Ex. Username)\"\r\n                            />\r\n                            <button type=\"submit\">Create Post</button>\r\n                        </Form>\r\n                        \r\n                    </Formik>\r\n                    \r\n                </div> */}\r\n                    <div className=\"createPostPage\">\r\n                    <Formik \r\n                        initialValues={initialValues} \r\n                        onSubmit={onSubmit} \r\n                        validationSchema={validationSchema}\r\n                    >\r\n                        <Form className=\"formBox\">\r\n                        <h2> Create Post </h2>\r\n                            \r\n\r\n                            <div className=\"textbox\">\r\n                                    <ErrorMessage name=\"title\" component=\"span\" className=\"error\" />\r\n                                        <br></br>\r\n                                        <span className=\"icon\">\r\n                                            <FaIcons.FaInfo />\r\n                                        </span>\r\n                                        <Field \r\n                                            autoComplete=\"off\"\r\n                                            id=\"\"\r\n                                            className=\"inputField\" \r\n                                            name=\"title\" \r\n                                            placeholder=\"Title\"\r\n                                        />\r\n                            </div>\r\n                            <div className=\"textbox\">\r\n                                    <ErrorMessage name=\"post-\" component=\"span\" className=\"error\"/>\r\n                                        <br />\r\n                                        <span className=\"icon\">\r\n                                            <FaIcons.FaRegEdit />\r\n                                        </span>\r\n                                        <Field \r\n                                            autoComplete=\"off\"\r\n                                            id=\"\"\r\n                                            className=\"inputField\" \r\n                                            name=\"postText\" \r\n                                            placeholder=\"Post\"\r\n                                        />\r\n                                       \r\n                            </div>\r\n                            <button className=\"rainbowButton\" type=\"submit\"><span>Create Post</span></button>\r\n                        </Form>\r\n                        \r\n                    </Formik>\r\n                    \r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { baseUrl } from '../helpers/const';\r\nimport { AuthContext } from \"../helpers/AuthContext\";\r\nimport axios from 'axios';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\nfunction Post() {\r\n    let { id } = useParams();\r\n    const { authState } = useContext(AuthContext);\r\n    const [postObject, setPostObject] = useState([]);\r\n    const [likedPosts, setLikedPosts] = useState([]);\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState(\"\");\r\n    const [listOfPosts, setListOfPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(\r\n            baseUrl + `posts/byId/${id}`,\r\n        )\r\n        .then((response) => {\r\n        // console.log(response);\r\n        // setListOfPosts(response.data);\r\n            setPostObject(response.data);\r\n            \r\n            // setLikedPosts(response.data.Likes);\r\n            // alert(postObject.Likes);\r\n            // setLikedPosts(response.data.Likes.map((like)=> {\r\n            //     return like.UserId;\r\n            // }));\r\n\r\n            // setAfterRender(false);\r\n            // main code\r\n            // setLikedPosts(likedPosts.map((userId) => {\r\n            //     return userId.UserId;\r\n            // }));\r\n\r\n            // setLikedPosts(response.data)\r\n            // setLikedPosts(likedPosts => likedPosts.map())\r\n\r\n\r\n            // setLikedPosts(likedPosts => likedPosts.map());\r\n\r\n            // setLikedPosts(response.data.Likes => response.data.Likes.map((like) => {\r\n            //     return like.UserId;\r\n            // }))\r\n            // alert(likedPosts);\r\n            // alert(response);\r\n            // setLikedPosts(response.data.Likes);\r\n            // setPostID(response.data.id);\r\n            // return response.data.id;\r\n            \r\n            \r\n        });\r\n        axios.get(baseUrl + \"posts\",\r\n            // {\r\n            //     headers: {accessToken: localStorage.getItem(\"accessToken\")}\r\n            // }\r\n            { \r\n                // headers: {userId: authState.id}\r\n                headers: { accessToken: Cookies.get(\"access-token\") },\r\n            }\r\n             \r\n            // { withCredentials: true }\r\n        )\r\n        .then((response) => {\r\n            setListOfPosts(response.data.listOfPosts);\r\n            setLikedPosts(response.data.likedPosts.map((like)=> {\r\n                return like.PostId;\r\n            }));\r\n        });\r\n        \r\n        axios.get(baseUrl + `comments/${id}`\r\n         \r\n        ).then((response) => {\r\n            setComments(response.data);\r\n        });\r\n    }, []);\r\n\r\n    // useLayoutEffect(() => {\r\n    //     axios.get(\r\n    //         \"http://localhost:3001/likes\", \r\n    //         { PostId: postId }, \r\n    //         { headers: { accessToken: localStorage.getItem(\"accessToken\")}})\r\n    // })\r\n\r\n    // useLayoutEffect(() => {\r\n\r\n    //     axios.get(`http://localhost:3001/posts/byId/${id}`).then((response) => {\r\n    //     // console.log(response);\r\n    //     // setListOfPosts(response.data);\r\n    //         setPostObject(response.data);\r\n            \r\n    //         // setLikedPosts(response.data.Likes);\r\n    //         // alert(postObject.Likes);\r\n    //         setLikedPosts(response.data.Likes.map((like)=> {\r\n    //             return like.UserId;\r\n    //         }));\r\n\r\n    //         // setAfterRender(false);\r\n    //         // main code\r\n    //         // setLikedPosts(likedPosts.map((userId) => {\r\n    //         //     return userId.UserId;\r\n    //         // }));\r\n\r\n    //         console.log(\"API WAS CALLED!\");\r\n\r\n    //         // setLikedPosts(likedPosts => likedPosts.map())\r\n\r\n\r\n    //         // setLikedPosts(likedPosts => likedPosts.map());\r\n\r\n    //         // setLikedPosts(response.data.Likes => response.data.Likes.map((like) => {\r\n    //         //     return like.UserId;\r\n    //         // }))\r\n    //         // alert(likedPosts);\r\n    //         // alert(response);\r\n    //         // setLikedPosts(response.data.Likes);\r\n    //         // setPostID(response.data.id);\r\n    //         // return response.data.id;\r\n            \r\n            \r\n    //     });\r\n\r\n    //     axios.get(`http://localhost:3001/comments/${id}`).then((response) => {\r\n    //         setComments(response.data);\r\n    //     });\r\n    // }, []);\r\n\r\n    // useLayoutEffect(() => {\r\n        \r\n\r\n    //     if (!check){\r\n    //         axios.get(`http://localhost:3001/posts/byId/${id}`).then((response) => {\r\n        \r\n    //         setLikedPosts(response.data.Likes.map((like)=> {\r\n    //             return like.UserId;\r\n    //         }));\r\n    //     });\r\n    //         setCheck(true);\r\n    //     } else {\r\n    //         setCheck(false);\r\n    //     }\r\n\r\n    const likePost = (postId, userId) => {\r\n        // axios.post(\r\n        //     \"http://localhost:3001/likes\", \r\n        //     { PostId: postId }, \r\n        //     { headers: { accessToken: localStorage.getItem(\"accessToken\")}}\r\n        // ).then((response) => {\r\n\r\n        //     // alert(response.data);\r\n        //     // Grab list, modify it, then set state to modified list (update)\r\n        //     setPostObject(\r\n        //         ()=> {\r\n        //             if (postObject.data.liked) {\r\n        //                 return {...postObject, Likes: [...postObject.Likes, 0]};\r\n        //             } else {\r\n        //                 const likesArray = postObject.Likes;\r\n        //                 likesArray.pop();\r\n        //                 return {...postObject, Likes: likesArray};\r\n        //             }\r\n        //         }\r\n        //     );\r\n\r\n        //     if (likedPosts.includes(userId)) {\r\n        //         setLikedPosts(\r\n        //             likedPosts.filter((userId) =>{\r\n        //                 return !userId;\r\n        //             })\r\n        //         );\r\n        //     } else {\r\n        //         setLikedPosts([...likedPosts, userId]);\r\n        //     }\r\n        // })\r\n    \r\n        axios.post(baseUrl + \"likes\", \r\n            { PostId: postId }, \r\n            { \r\n                // headers: { accessToken: localStorage.getItem(\"accessToken\") } \r\n                headers: { accessToken: Cookies.get(\"access-token\") },\r\n            }\r\n        ).then((response) => {\r\n            setListOfPosts(\r\n                listOfPosts.map((post) => {\r\n                    if (post.id === postId) {\r\n                        if (response.data.liked) {\r\n                            return {...post, Likes: [...post.Likes, 0]};\r\n                        } else {\r\n                            const likesArray = post.Likes;\r\n                            likesArray.pop();\r\n                            return {...post, Likes: likesArray};\r\n                        }\r\n                    } else {\r\n                        console.log(post);\r\n                        return post\r\n                    }\r\n                })\r\n            );\r\n            if (likedPosts.includes(postId)) {\r\n                setLikedPosts(\r\n                    likedPosts.filter((id) =>{\r\n                        return id !== postId;\r\n                    })\r\n                );\r\n            } else {\r\n                setLikedPosts([...likedPosts, postId]);\r\n            }\r\n        });\r\n    };\r\n        \r\n    const addComment = () => {\r\n        axios.post(baseUrl + \"/comments\", \r\n            {\r\n                commentBody: newComment, \r\n                PostId: id\r\n            },\r\n            {\r\n                // headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n                headers: { accessToken: Cookies.get(\"access-token\") },\r\n            }\r\n        ).then((response) => {\r\n            if (response.data.error){\r\n                alert(response.data.error);\r\n            } else {\r\n                // this section makes new comment appear automatically\r\n                const commentToAdd = {commentBody: newComment, username: response.data.username}\r\n                setComments([...comments, commentToAdd]) //add new element to array\r\n                setNewComment(\"\"); //set new comment to empty string\r\n            }\r\n        });\r\n    };\r\n\r\n    const deleteComment = (id) => {\r\n        // use ` to add js variables\r\n        axios.delete(baseUrl + `/comments/${id}`, \r\n            {\r\n                // headers: {accessToken: localStorage.getItem(\"accessToken\")},\r\n                headers: { accessToken: Cookies.get(\"access-token\") },\r\n            }\r\n        )\r\n        .then(()=> {\r\n            //loops through list of comments, and grabs each comment in variable val\r\n            setComments(\r\n                comments.filter((val) => {\r\n                    return val.id !== id;\r\n                })\r\n            );\r\n        }); \r\n    };\r\n\r\n    const deletePost = (id) => {\r\n        axios.delete(baseUrl + `/posts/${id}`, \r\n            {\r\n                // headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n                headers: { accessToken: Cookies.get(\"access-token\") },\r\n            }\r\n        )\r\n        .then(() => {\r\n            console.log(\"wow it did something!\");\r\n        });\r\n    };\r\n\r\n    // const deletePost = (id) => {\r\n    //     axios.delete(`http://localhost:3001/posts/${id}`).then(() => {\r\n    //         alert(\"delete success\");\r\n    //         history.push(\"/\");\r\n    //     });\r\n    // };\r\n\r\n    const editPost = (option) => {\r\n        if (option === \"title\") {\r\n            let newTitle = prompt(\"Enter New Title:\");\r\n            axios.put(baseUrl + \"/posts/title\", \r\n                { \r\n                    newTitle: newTitle, \r\n                    id: id\r\n                },\r\n                {\r\n                    // headers: { accessToken: localStorage.getItem(\"accessToken\")}\r\n                    headers: { accessToken: Cookies.get(\"access-token\") },\r\n                }\r\n            );\r\n            setPostObject({...postObject, title: newTitle});\r\n        } else {\r\n            let newPostText = prompt(\"Enter New Post Text:\");\r\n            axios.put(baseUrl + \"/posts/postText\",\r\n                { \r\n                    newText: newPostText, \r\n                    id: id\r\n                },\r\n                {\r\n                    // headers: { accessToken: localStorage.getItem(\"accessToken\")}\r\n                    headers: { accessToken: Cookies.get(\"access-token\") },\r\n                }\r\n            );\r\n            setPostObject({...postObject, postText: newPostText});\r\n        }\r\n    };\r\n\r\n    return (\r\n        \r\n        <div className=\"background\">\r\n            <main>\r\n                <h2>Post #{id}</h2>\r\n                <div className=\"postPage\">\r\n                    <div className=\"leftSide\">\r\n                        {listOfPosts.map((value) => {\r\n                            if (value.id === postObject.id) {\r\n                            return (\r\n                                <div key={postObject.id} className=\"post\" id=\"individual\">\r\n                                    <div className=\"title\" onClick={() => {\r\n                                        if (authState.username === postObject.username){\r\n                                            editPost(\"title\");\r\n                                        }\r\n                                    }}>\r\n                                        {value.title}\r\n                                    </div>\r\n                                    <div className=\"body\" onClick={() => {\r\n                                        if (authState.username === postObject.username){\r\n                                            editPost(\"body\");\r\n                                        }\r\n                                    }}>\r\n                                        {value.postText}\r\n                                    </div>\r\n                                    <div className=\"footer\">\r\n                                        <div className=\"username\">\r\n                                            {value.username}\r\n                                        </div>\r\n                                        {authState.username === postObject.username && (\r\n                                            <button \r\n                                                className=\"rainbowButton\"\r\n                                                onClick={() => {\r\n                                                    deletePost(postObject.id);\r\n                                                }}\r\n                                            >\r\n                                            <span>Delete Post</span></button>\r\n                                        )}\r\n                                        {!likedPosts.includes(value.id) ? (\r\n                                            <div className=\"likeButtons\">\r\n                                                <AiIcons.AiOutlineLike className=\"likeIcon\" onClick={() => {likePost(value.id)}}/>\r\n                                            </div>\r\n                                        ) : (\r\n                                            <div className=\"likeButtons\">\r\n                                                <AiIcons.AiFillLike className=\"likeIcon\" onClick={() => {likePost(value.id)}}/>\r\n                                            </div>\r\n                                        )}\r\n                                        <label> {value.Likes.length}</label>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        })}\r\n                        \r\n                    </div>\r\n                    <div className=\"rightSide\">\r\n                        <div className=\"addCommentContainer\">\r\n                            <h2>Add Comment</h2>\r\n                            <div className=\"textbox\">\r\n                                <input \r\n                                    type='text' \r\n                                    placeholder='Comment...' \r\n                                    autoComplete=\"off\"\r\n                                    value={newComment} \r\n                                    onChange={(event) => {setNewComment(event.target.value)}}\r\n                                    \r\n                                />\r\n                            </div>\r\n                            <button className=\"rainbowButton\" onClick={addComment}><span>Add Comment </span></button>\r\n                        </div>\r\n                        <div className=\"listOfComments\">\r\n                            {comments.map((comment, key) => {\r\n                                return (\r\n                                    <div key={key} className=\"comment\"> \r\n                                        {comment.commentBody} \r\n                                        <div><label> By User: {comment.username}</label></div>\r\n                                        \r\n                                        {authState.username === comment.username && (\r\n                                            <button className=\"rainbowButton\" onClick={() => {deleteComment(comment.id)}}><span> Delete </span></button>\r\n                                        )}\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../helpers/AuthContext';\r\nimport { baseUrl } from '../helpers/const';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport Cookies from 'js-cookie';\r\n\r\nfunction Login() {\r\n\r\n    const [username, setUsername] = useState();\r\n    const [password, setPassword] = useState();\r\n    const { authState } = useContext(AuthContext);\r\n    const {setAuthState} = useContext(AuthContext);\r\n    const [loginStatus, setLoginStatus] = useState(\"\");\r\n\r\n    let history = useHistory();\r\n\r\n    axios.defaults.withCredentials = true;\r\n\r\n    const initialValues = {\r\n        username: \"\",\r\n        password: \"\"\r\n    };\r\n\r\n    // const loginSubmit = (data) => {\r\n    //     axios.post(baseUrl + \"auth/login\", data, {crossDomain: true})\r\n    //     .then((response) => {\r\n    //         console.log(response.data)\r\n    //         if (response.data.error) {\r\n    //             alert(response.data.error);\r\n    //             console.log(response.data.error);\r\n    //         } else {\r\n    //             console.log(response);\r\n    //             history.push(\"/about\");\r\n    //         }\r\n    //     });\r\n    // };\r\n\r\n    // new stuff\r\n    const loginSubmit = (data) => {\r\n        axios.post(baseUrl + \"auth/login\", data, {crossDomain: true})\r\n        .then((response) => {\r\n            console.log(response.data)\r\n            if (response.data.error) {\r\n                alert(response.data.error);\r\n                console.log(response.data.error);\r\n                setLoginStatus(response.data.error);\r\n            } else {\r\n                console.log(\"Response from Login post\");\r\n                console.log(response);\r\n                Cookies.set(\"access-token\", response.data.accessToken);\r\n                setLoginStatus(response.data.user.username);\r\n                setAuthState({authState,  \r\n                    username: response.data.user.username, \r\n                    id: response.data.user.id, \r\n                    status: true \r\n                });\r\n                history.push(\"/about\");\r\n            }\r\n        });\r\n    };\r\n    \r\n    useEffect(() => {\r\n        // if (localStorage.getItem(\"accessToken\")){\r\n        //     history.push(\"/\");\r\n        // }\r\n        // if (authState.status === true) {\r\n        //     history.push(\"/\");\r\n        // }\r\n    });\r\n\r\n    const login = () => {\r\n        const data = {username: username, password: password}; //creating an object\r\n        axios.post(baseUrl + \"auth/login\", data, {crossDomain: true}\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data)\r\n            if (response.data.error){\r\n                alert(response.data.error);\r\n                console.log(response.data.error);\r\n            } else {\r\n                setLoginStatus(response.data.username)\r\n                // localStorage.setItem(\"accessToken\", response.data.token);\r\n                Cookies.set(response.data.accessToken);\r\n                setAuthState({ \r\n                    username: response.data.user.username, \r\n                    id: response.data.user.id, \r\n                    status: true \r\n                });\r\n                history.push(\"/about\");\r\n            }  \r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n            <div className=\"background\">\r\n                <main>\r\n                    <div className=\"formBox\">\r\n                        {/* <h2>Login</h2>\r\n                        <p>Please enter your login details</p> \r\n                             <form netlify>\r\n                                <div className=\"textbox\">\r\n                                    <i className=\"fas fa-user\"></i>\r\n                                    <span className=\"icon\">\r\n                                        <FaIcons.FaUserAlt />\r\n                                    </span>\r\n                                    <input \r\n                                        type='text' \r\n                                        placeholder='Username' \r\n                                        onChange={(event) => {\r\n                                            setUsername(event.target.value)\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"textbox\">\r\n                                    <i className=\"fa fa-lock\" aria-hidden=\"true\"></i>\r\n                                    <span className=\"icon\">\r\n                                        <FaIcons.FaLock />\r\n                                    </span>\r\n                                    <input \r\n                                        type='password' \r\n                                        placeholder='Password' \r\n                                        onChange={(event) => {\r\n                                            setPassword(event.target.value)\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <button type='submit' className=\"rainbowButton\" onClick={login}>\r\n                                    <span>Sign In</span>\r\n                                </button>\r\n                            </form> */}\r\n                            <Formik \r\n                                initialValues={initialValues}\r\n                                onSubmit={loginSubmit}\r\n                            >\r\n                                <Form netlify>\r\n                                    <div className=\"formBox\">\r\n                                        {/* <h2>Login Formik</h2> */}\r\n                                        <h2>Login</h2>\r\n                                        <p>Please enter your login details</p>\r\n                                        <div className=\"textbox\">\r\n                                            <span className=\"icon\">\r\n                                                <FaIcons.FaUserAlt />\r\n                                            </span>\r\n                                            <Field\r\n                                                autoComplete=\"off\"\r\n                                                className=\"inputField\"\r\n                                                name=\"username\"\r\n                                                placeholder=\"Username\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"textbox\">\r\n                                            <span className=\"icon\">\r\n                                                <FaIcons.FaLock />\r\n                                            </span>\r\n                                            <Field \r\n                                                autoComplete=\"off\"\r\n                                                className=\"inputField\"\r\n                                                name=\"password\"\r\n                                                placeholder=\"Password\"\r\n                                                type=\"password\"\r\n                                            />\r\n                                        </div>\r\n                                        <button type=\"submit\" className=\"rainbowButton\">\r\n                                            <span>Submit</span>\r\n                                        </button>\r\n                                    </div>\r\n                                </Form>\r\n                            </Formik>\r\n                           \r\n                    </div>\r\n                </main>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\n\r\nfunction Logout() {\r\n    return (\r\n        <div className=\"background\">\r\n            <main>\r\n                <div className=\"content\">\r\n                    <h2>Logout</h2> <br />\r\n                    <p>You have successfully Logged Out! <br />\r\n                    </p>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logout\r\n","import React from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport { baseUrl } from '../helpers/const';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport * as Yup from \"yup\";\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\n\r\n\r\n\r\nfunction Register() {\r\n\r\n    axios.defaults.withCredentials = true;\r\n\r\n    let history = useHistory();\r\n    const initialValues = {\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        email: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n    };\r\n\r\n    //validate input\r\n    const validationSchema = Yup.object().shape({\r\n        firstname: Yup.string(),\r\n        lastname: Yup.string(),\r\n        email: Yup.string().required(\"You must input an email!\"),\r\n        username: Yup.string().min(3).max(15).required(\"You must input a username!\"),\r\n        password: Yup.string().min(4).max(20).required(\"You must input a password!\"),\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        axios.post(baseUrl +\"auth/register\", data)\r\n        .then((response)=> {\r\n            if (response.data.error){\r\n                alert(response.data.error);\r\n                console.log(response.data.error);\r\n            } else {\r\n                console.log(response);\r\n                history.push(\"/success\");\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"background\">\r\n            <main>\r\n                <Formik \r\n                    initialValues={initialValues}\r\n                    onSubmit={onSubmit}\r\n                    validationSchema={validationSchema}\r\n                >\r\n                    <Form netlify>\r\n                        <div className=\"formBox\">\r\n                            <h2>Register</h2>\r\n                            <p>Please enter your details</p>\r\n                                <div className=\"textbox\">\r\n                                    <ErrorMessage name=\"firstname\" component=\"span\" />\r\n                                    <span className=\"icon\">\r\n                                        <FaIcons.FaUser />\r\n                                    </span>\r\n                                    <Field \r\n                                        autoComplete=\"off\"\r\n                                        // id=\"inputCreatePost\"\r\n                                        className=\"inputField\" \r\n                                        name=\"firstname\" \r\n                                        placeholder=\"First Name\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"textbox\">\r\n                                    <ErrorMessage name=\"lastname\" component=\"span\" />\r\n                                    <span className=\"icon\">\r\n                                        <FaIcons.FaUserPlus />\r\n                                    </span>\r\n                                    <Field \r\n                                        autoComplete=\"off\"\r\n                                        // id=\"inputCreatePost\"\r\n                                        className=\"inputField\" \r\n                                        name=\"lastname\" \r\n                                        placeholder=\"Last Name\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"textbox\">\r\n                                    <ErrorMessage name=\"email\" component=\"span\" />\r\n                                    <span className=\"icon\">\r\n                                        <AiIcons.AiFillMail />\r\n                                    </span>\r\n                                    <Field \r\n                                        autoComplete=\"off\"\r\n                                        // id=\"inputCreatePost\"\r\n                                        className=\"inputField\" \r\n                                        name=\"email\" \r\n                                        placeholder=\"Email Address\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"textbox\">\r\n                                    <ErrorMessage name=\"username\" component=\"span\" />\r\n                                    <span className=\"icon\">\r\n                                        <FaIcons.FaUserTag />\r\n                                    </span>\r\n                                    <Field \r\n                                        autoComplete=\"off\"\r\n                                        // id=\"inputCreatePost\"\r\n                                        className=\"inputField\" \r\n                                        name=\"username\" \r\n                                        placeholder=\"Username\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"textbox\">\r\n                                    <ErrorMessage name=\"password\" component=\"span\" />\r\n                                    <span className=\"icon\">\r\n                                        <FaIcons.FaLock />\r\n                                    </span>\r\n                                    <Field \r\n                                        autoComplete=\"off\"\r\n                                        type=\"password\"\r\n                                        // id=\"inputCreatePost\"\r\n                                        className=\"inputField\" \r\n                                        name=\"password\" \r\n                                        placeholder=\"Password\"\r\n                                    />\r\n                                </div>\r\n                                    {/* <div className=\"textbox\">\r\n                                    <ErrorMessage name=\"confirmPassword\" component=\"span\" />\r\n                                        <span className=\"icon\">\r\n                                            <FaIcons.FaLock />\r\n                                        </span>    \r\n                                    <Field \r\n                                            autocomplete=\"off\"\r\n                                            type=\"password\"\r\n                                            id=\"inputCreatePost\"\r\n                                            className=\"inputField\" \r\n                                            name=\"confirmPassword\" \r\n                                            placeholder=\"Confirm Password\"\r\n                                        />\r\n                                    </div> */}\r\n                            <button type=\"submit\" className=\"rainbowButton\">\r\n                                <span>Register</span>\r\n                            </button>\r\n                        </div>\r\n                    </Form>\r\n                </Formik>\r\n            </main>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Register\r\n","import React from 'react'\r\n\r\nfunction Success() {\r\n    return (\r\n        <div className=\"background\">\r\n            <main>\r\n                <div className=\"content\">\r\n                    <h2>Registration Successful</h2> <br />\r\n                    <p>You have registered successfully! <br />\r\n                        Please proceed to the Login Page\r\n                    </p>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Success\r\n","export default __webpack_public_path__ + \"static/media/profiledefault.a9136072.jpg\";","export default __webpack_public_path__ + \"static/media/profiledefaultuser.a9136072.jpg\";","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { baseUrl } from '../helpers/const';\r\nimport axios from 'axios';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport profiledefault from '../uploads/profiledefault.jpg';\r\nimport profilealt from '../assets/profiledefaultuser.jpg';\r\nimport Cookies from 'js-cookie';\r\n\r\n// Tabs for profile\r\nfunction openCity(e, cityName)\r\n{\r\n    var i, tabcontent, tablinks;\r\n    tabcontent = document.getElementsByClassName(\"tabcontent\");\r\n    for (i = 0; i < tabcontent.length; i++)\r\n    {\r\n        tabcontent[i].style.display = \"none\";\r\n    }\r\n    tablinks = document.getElementsByClassName(\"tablinks\");\r\n    for (i = 0; i < tablinks.length; i++)\r\n    {\r\n        tablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\r\n    }\r\n    document.getElementById(cityName).style.display = \"block\";\r\n    e.currentTarget.className += \" active\";\r\n}\r\n\r\nfunction Profile() {\r\n\r\n    let { id } = useParams();\r\n    let history = useHistory();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [firstname, setFirstname] = useState(\"\");\r\n    const [lastname, setLastname] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [listOfPosts, setListOfPosts] = useState([]);\r\n    const [likedPosts, setLikedPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(baseUrl + `auth/userinfo/${id}`).then((response) => {\r\n            setUsername(response.data.username);\r\n            setFirstname(response.data.firstname);\r\n            setLastname(response.data.lastname);\r\n            setEmail(response.data.email);\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n\r\n        axios.get(baseUrl + `posts/byuserId/${id}`,).then((response) => {\r\n            setListOfPosts(response.data);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        });\r\n\r\n        // if (!localStorage.getItem(\"accessToken\")) {\r\n        //     history.push(\"/login\");\r\n        if (!Cookies.get()) {\r\n            history.push(\"/\");\r\n        } else {\r\n            axios.get(baseUrl + \"posts\",\r\n                { \r\n                    // headers: { accessToken: localStorage.getItem(\"accessToken\")}\r\n                    headers: { accessToken: Cookies.get(\"access-token\") },\r\n                }\r\n            ).then((response) => {\r\n                // contains 2 arrays, listsOfPosts and likedPosts\r\n                setLikedPosts(response.data.likedPosts.map((like) => {\r\n                    return like.PostId;\r\n                }));\r\n            });\r\n        }\r\n    }, [id]);\r\n\r\n    const likePost = (postId) => {\r\n        axios.post(baseUrl + \"likes\", \r\n            { PostId: postId }, \r\n            { \r\n                // headers: { accessToken: localStorage.getItem(\"accessToken\")}\r\n                headers: { accessToken: Cookies.get(\"access-token\") },\r\n            }\r\n        ).then((response) => {\r\n            // Grab list, modify it, then set state to modified list (update)\r\n            setListOfPosts(\r\n                listOfPosts.map((post) => {\r\n                    // specific post\r\n                    if (post.id === postId) {\r\n                        if (response.data.liked) {\r\n                            // ...post (keep everything in the post the same, but at the end, add item)\r\n                            return {...post, Likes: [...post.Likes, 0] };\r\n                        } else {\r\n                            const likesArray = post.Likes;\r\n                            // pop removes last element\r\n                            likesArray.pop();\r\n                            // return modified item (array with 1 less item)\r\n                            return {...post, Likes:  likesArray};\r\n                        }\r\n                    } else {\r\n                        return post;\r\n                    }\r\n                })\r\n            );\r\n\r\n            if (likedPosts.includes(postId)) {\r\n                setLikedPosts(\r\n                    likedPosts.filter((id) => {\r\n                        return id !== postId;\r\n                    })\r\n                );\r\n            } else {\r\n                setLikedPosts([...likedPosts, postId]);\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n            <div className=\"background\">\r\n                <main>\r\n                    <div className=\"profile-card\">\r\n                        <div className=\"card-header\">\r\n                            <div className=\"pic\">\r\n                            {/* <img src='UPLOADS/\".$username.\"/\".$username.\".jpg'> */}\r\n                                <img src={profiledefault} alt=\"Missing\"/>\r\n                                {/* <img src=\"ASSETS/images/smoking panda.jpg\" alt=\"John\"> */}\r\n                            </div>\r\n                            <div className=\"name\">\r\n                                {username}\r\n                            </div>\r\n                            <div className=\"desc\">Developer & Desiger</div>\r\n                                <div className=\"sm\">\r\n                                    <AiIcons.AiFillFacebook />\r\n                                    <AiIcons.AiOutlineTwitter />\r\n                                    <AiIcons.AiFillGithub />\r\n                                </div>\r\n                        </div>\r\n                        <div className=\"card-footer\">\r\n                            <div className=\"numbers\">\r\n                                <div className=\"item\">\r\n                                    <span>{listOfPosts.length}</span>\r\n                                    Posts\r\n                                </div>\r\n                                <div className=\"item\">\r\n                                    <span>0</span>\r\n                                    Followers\r\n                                </div>\r\n                                <div className=\"item\">\r\n                                    <span>0</span>\r\n                                    Following\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tab\">\r\n                        <button className=\"tablinks\" onClick={(e) => {openCity(e, 'About')}}>About</button>\r\n                        <button className=\"tablinks\" onClick={(e) => {openCity(e, 'Skills')}}>Skills</button>\r\n                        <button className=\"tablinks\" onClick={(e) => {openCity(e, 'Contact')}}>Contact</button>\r\n                    </div>\r\n\r\n                    {/* Tab content */}\r\n                    <div id=\"About\" className=\"tabcontent\">\r\n                        <h3>User:</h3>\r\n                        <p>Username: {username} </p>\r\n                        <p>Firstname: {firstname} </p>\r\n                        <p>Lastname: {lastname}</p>\r\n                        <p>Email: {email}</p>\r\n                    </div>\r\n                    <div id=\"Skills\" className=\"tabcontent\">\r\n                        <h3>Skills</h3>\r\n                        <ul id=\"skillsList\">\r\n                            <li>HTML</li>\r\n                            <li>CSS</li>\r\n                            <li>JavaScript</li>\r\n                            <li>PHP</li>\r\n                            <li>React (In Progress)</li>\r\n                            <li>Node.JS (In Progress)</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div id=\"Contact\" className=\"tabcontent\">\r\n                        <h3>Contact</h3>\r\n                        <p>Phone: N/A</p>\r\n                        <p>Email: N/A</p>\r\n                    </div>\r\n                    <div className=\"listOfPosts\">\r\n                        {listOfPosts.map((value, key) => {\r\n                            return (\r\n                                <div key={key} className=\"post\">\r\n                                    <div className=\"title\">\r\n                                        {value.title}\r\n                                    </div>\r\n                                    <div \r\n                                        className=\"body\"\r\n                                        onClick={() => {\r\n                                            history.push(`/post/${value.id}`);\r\n                                        }}\r\n                                    >\r\n                                        {value.postText}\r\n                                    </div>\r\n                                    <div className=\"footer\">\r\n                                        <div className=\"username\">{value.username}</div>\r\n                                        {!likedPosts.includes(value.id) ? (\r\n                                            <div className=\"likeButtons\">\r\n                                                <AiIcons.AiOutlineLike className=\"likeIcon\" onClick={() => {likePost(value.id)}}/>\r\n                                            </div>\r\n                                        ) : (\r\n                                            <div className=\"likeButtons\">\r\n                                                <AiIcons.AiFillLike className=\"likeIcon\" onClick={() => {likePost(value.id)}}/>\r\n                                            </div>\r\n                                        )}\r\n                                        <label>{value.Likes.length}</label>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </main>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n        <>\r\n        <div className=\"background\">\r\n            <main>\r\n                {/* <div className=\"page-content\"> */}\r\n                    <h2>About Page</h2>\r\n                    <div className=\"content\">\r\n                        <p>I had previously created a website using my prior <br />\r\n                        knowledge in HTML, CSS, JAVASCRIPT and PHP <br />\r\n                        I had recently started self-learning REACT.</p>\r\n\r\n                        <p>This webapp utilises React, NodeJS, Express and MySQL</p>\r\n                    </div>\r\n                    \r\n                {/* </div> */}\r\n            </main>\r\n            \r\n        </div>\r\n        <sub>\r\n            <main>\r\n                \r\n                <h2>Sub area</h2>\r\n                <p>This is a test for the sub content</p>\r\n                <div className=\"subcontent\">\r\n                    <div className=\"firstArea\">\r\n                        <p>This is a test for the sub content area 1 <br></br>\r\n                            Trying to find the correct size for these\r\n                            paragraphs.<br></br>\r\n                            -----------------------------------------<br></br>\r\n                            -----------------------------------------<br></br>\r\n                            -----------------------------------------<br></br></p></div>\r\n                    <div className=\"secondArea\"><p>This is a test for the sub content area 2<br></br>\r\n                        -----------------------------------------<br></br>\r\n                        -----------------------------------------<br></br>\r\n                        -----------------------------------------<br></br>\r\n                        -----------------------------------------<br></br>\r\n                        -----------------------------------------<br></br>\r\n                        -----------------------------------------<br></br></p></div>\r\n                    <div className=\"thirdArea\"><p>This is a test for the sub content area 3<br></br>\r\n                        -----------------------------------------<br></br>\r\n                        -----------------------------------------<br></br>\r\n                        -----------------------------------------<br></br>\r\n                        -----------------------------------------<br></br>\r\n                        -----------------------------------------<br></br>\r\n                        -----------------------------------------<br></br>\r\n                        -----------------------------------------<br></br>\r\n                        -----------------------------------------<br></br>\r\n                        -----------------------------------------<br></br>\r\n                        -----------------------------------------<br></br>\r\n                       \r\n                        -------------------------------------WEEEE<br></br></p></div>\r\n                </div>\r\n            </main>\r\n            \r\n        </sub>\r\n        <div className=\"third\">\r\n            <main>\r\n                <h2>Third Area</h2>\r\n                <p>This is a test for the third area</p>\r\n            </main>\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\n\r\nfunction Settings() {\r\n    return (\r\n        <div className=\"background\">\r\n            <main>\r\n                <h2>Settings</h2>\r\n                <a href=\"changepassword\">Change password here</a>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings\r\n","import React, { useState } from 'react'\r\nimport { baseUrl } from '../helpers/const';\r\nimport axios from 'axios';\r\nimport * as FaIcons from 'react-icons/fa';\r\n\r\nfunction ChangePassword() {\r\n\r\n    const [oldPassword, setOldPassword] = useState(\"\");\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n\r\n    const changePassword = () => {\r\n        axios.put(\r\n            baseUrl + \"auth/changepassword\", \r\n            {\r\n                oldPassword: oldPassword,\r\n                newPassword: newPassword\r\n            }, \r\n            {\r\n                headers: {\r\n                    accessToken: localStorage.getItem(\"accessToken\"),\r\n                }\r\n            }\r\n        ).then((response) => {\r\n            if (response.data.error) {\r\n                alert(response.data.error);\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        // <div>\r\n            \r\n        // </div>\r\n        <div className=\"background\">\r\n            <main>\r\n                <div className=\"formBox\">\r\n                    <h2>Change Password</h2>\r\n                    <form>\r\n                        <div className=\"textbox\">\r\n                            <span className=\"icon\">\r\n                                <FaIcons.FaLock />\r\n                            </span>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Old Password\"\r\n                                onChange={(event) => {\r\n                                    setOldPassword(event.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"textbox\">\r\n                            <span className=\"icon\">\r\n                                <FaIcons.FaLock />\r\n                            </span>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"New Password\"\r\n                                onChange={(event) => {\r\n                                    setNewPassword(event.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <button type=\"submit\" \r\n                            className=\"rainbowButton\"\r\n                            onClick={changePassword}\r\n                        >\r\n                            <span>Save</span>\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChangePassword\r\n","import React from 'react'\r\n\r\nfunction NotFound() {\r\n    return (\r\n            <div className=\"background\">\r\n                <main>\r\n                    <div className=\"content\">\r\n                        <h2>404 Not Found</h2> <br />\r\n                        <p>This page is coming soon! <br />\r\n                            Sorry for the inconvenience!\r\n                        </p>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { AuthContext } from './helpers/AuthContext';\nimport { baseUrl } from './helpers/const';\nimport axios from 'axios';\nimport Navbar from './components/Navbar';\nimport Home from './pages/Home';\nimport CreatePost from './pages/CreatePost';\nimport Post from './pages/Post';\nimport Login from './pages/Login';\nimport Logout from './pages/Logout';\nimport Register from './pages/Register';\nimport Success from './pages/Success';\nimport Profile from './pages/Profile';\nimport About from './pages/About';\nimport Settings from './pages/Settings';\nimport ChangePassword from './pages/ChangePassword';\nimport NotFound from './pages/NotFound';\nimport Cookies from 'js-cookie';\n\naxios.defaults.withCredentials = true;\n\nfunction scrollFunction()\n{\n  if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20)\n  {\n    document.getElementById(\"backToTopBtn\").style.display = \"block\";\n  }\n  else\n  {\n    document.getElementById(\"backToTopBtn\").style.display = \"none\";\n  }\n}\n\nfunction topFunction()\n{\n  document.body.scrollTop = 0;\n  document.documentElement.scrollTop = 0;\n}\n\nfunction App() {\n  // Check login\n  const [authState, setAuthState] = useState({\n    username: \"\",\n    id: 0,\n    status: false,\n  });\n\n  useEffect(() => {\n    axios.get(baseUrl +\"auth/token\", \n\n    // #### IDEA: create header and assign accesstoken header to cookies.get\n      {\n        headers: { accessToken: Cookies.get(\"access-token\")}\n      }\n    // {\n      // headers: {\n      //   accessToken: localStorage.getItem(\"accessToken\")\n      // }\n     \n    // },\n     )\n    .then((response) => {\n      console.log(\"checked for token\");\n      console.log(response);\n      // Checks for errors for login state\n      if (response.data.error) {\n        console.log(response.data.error);\n        setAuthState({...authState, status: false}); //only change 1 \n      } else {\n        setAuthState({\n          username: response.data.username,\n          id: response.data.id,\n          status: true,\n        });\n      }\n    });\n    \n    axios.get(baseUrl +\"auth/login\").then((response) => {\n      console.log(\"login get req\");\n      console.log(response);\n    })\n  },[]);\n\n  window.onscroll = function() {scrollFunction()};\n\n  return (\n    <div className=\"App\">\n      <button onClick={topFunction} id=\"backToTopBtn\" className=\"rainbowButton\" title=\"Go to top\">\n        <span>Back to Top</span>\n      </button>\n      <AuthContext.Provider value={{ authState, setAuthState }}>\n        <Router>\n          <Navbar authState={authState} setAuthState={setAuthState}/>\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/createpost\" exact component={CreatePost} />\n            <Route path=\"/post/:id\" exact component={Post} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/success\" component={Success} />\n            <Route path=\"/profile/:id\" component={Profile} />\n            <Route path=\"/profile/:usernameInput\" component={Profile} />\n            <Route path=\"/settings\" component={Settings} />\n            <Route path=\"/changepassword\" component={ChangePassword} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"*\" exact component={NotFound} />\n          </Switch>\n        </Router>\n      </AuthContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}